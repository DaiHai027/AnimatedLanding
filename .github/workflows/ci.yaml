# .github/workflows/ci.yml
name: Animated Landing CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  CACHE_DEPENDENCY_PATH: package-lock.json

jobs:
  # Quality checks and testing
  quality-checks:
    runs-on: ubuntu-latest
    name: Quality Checks & Tests
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript type checking
      run: npm run check

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm run test

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/coverage-final.json
        fail_ci_if_error: false

  # Build job
  build:
    runs-on: ubuntu-latest
    name: Build Application
    needs: quality-checks
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          !dist/**/*.map
        retention-days: 30

  # Security audit
  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Run dependency check
      run: npx audit-ci --moderate

  # Deploy job (only on main branch)
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: [quality-checks, build, security-audit]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist/

    - name: Deploy to production
      run: |
        echo "ðŸš€ Deploying to production..."
        # Add your deployment commands here
        # For example: rsync, docker push, cloud deployment, etc.
        echo "âœ… Deployment completed successfully!"
